version: 2

models:
  - name: dim_tasty_bytes__location
    description: "Tasty bytes location dimensions."
    config:
      contract:
        enforced: true
      materialized: table
    latest_version: 1
    versions:
      - v: 1
    
    columns:
      - name: dwh_location_id
        data_type: varchar
        description: ""
        constraints:
          - type: not_null
        tests:
          - unique
      
      - name: dwh_source
        data_type: varchar
        description: ""
        constraints:
          - type: not_null
        tests:
          - accepted_values:
              values:
                - 'tasty_bytes'
      
      - name: dwh_version
        data_type: number
        description: ""
        constraints:
          - type: not_null
      
      - name: dwh_granularity
        data_type: varchar
        description: ""
        constraints:
          - type: not_null
      
      - name: city_id
        data_type: number
        description: "{{ doc('tasty_bytes__city_id') }}"
        tests:
          - test_name: not_null
            config:
              where: >
                dwh_source = 'tasty_bytes'
                and dwh_granularity in ('city_id', 'city_name')
          - test_name: unique
            name: unique_dim_tasty_bytes__location_v1_city_id__per__city_id
            config:
              where: >
                dwh_source = 'tasty_bytes' and dwh_granularity = 'city_id'
          - test_name: unique
            name: unique_dim_tasty_bytes__location_v1_city_id__per__city_name
            config:
              where: >
                dwh_source = 'tasty_bytes' and dwh_granularity = 'city_name'
      
      - name: city_name
        data_type: varchar
        description: "{{ doc('tasty_bytes__city_name') }}"
        tests:
          - test_name: not_null
            config:
              where: >
                dwh_source = 'tasty_bytes'
                and dwh_granularity in ('city_id', 'city_name')
          - test_name: unique
            name: unique_dim_tasty_bytes__location_v1_city_name__per__city_id
            config:
              where: >
                dwh_source = 'tasty_bytes' and dwh_granularity = 'city_id'
          - test_name: unique
            name: unique_dim_tasty_bytes__location_v1_city_name__per__city_name
            config:
              where: >
                dwh_source = 'tasty_bytes' and dwh_granularity = 'city_name'
      
      - name: city_population
        data_type: number
        description: "{{ doc('tasty_bytes__city_population') }}"
        tests:
          - test_name: not_null
            config:
              where: >
                dwh_source = 'tasty_bytes'
                and dwh_granularity in ('city_id', 'city_name')
      
      - name: country_id
        data_type: number
        description: "{{ doc('tasty_bytes__country_id') }}"
        tests:
          - test_name: not_null
            config:
              where: >
                dwh_source = 'tasty_bytes'
                and dwh_granularity in ('country_id', 'county_name', 'iso_country_code')
          - test_name: unique
            name: unique_dim_tasty_bytes__location_v1_country_id__per__country_id
            config:
              where: >
                dwh_source = 'tasty_bytes' and dwh_granularity = 'country_id'
          - test_name: unique
            name: unique_dim_tasty_bytes__location_v1_country_id__per__country_name
            config:
              where: >
                dwh_source = 'tasty_bytes' and dwh_granularity = 'country_name'
          - test_name: unique
            name: unique_dim_tasty_bytes__location_v1_country_id__per__iso_country_code
            config:
              where: >
                dwh_source = 'tasty_bytes' and dwh_granularity = 'iso_country_code'
      
      - name: country_name
        data_type: varchar
        description: "{{ doc('tasty_bytes__country_name') }}"
        tests:
          - test_name: not_null
            config:
              where: >
                dwh_source = 'tasty_bytes'
                and dwh_granularity in ('country_id', 'county_name', 'iso_country_code')
          - test_name: unique
            name: unique_dim_tasty_bytes__location_v1_country_name__per__country_id
            config:
              where: >
                dwh_source = 'tasty_bytes' and dwh_granularity = 'country_id'
          - test_name: unique
            name: unique_dim_tasty_bytes__location_v1_country_name__per__country_name
            config:
              where: >
                dwh_source = 'tasty_bytes' and dwh_granularity = 'country_name'
          - test_name: unique
            name: unique_dim_tasty_bytes__location_v1_country_name__per__iso_country_code
            config:
              where: >
                dwh_source = 'tasty_bytes' and dwh_granularity = 'iso_country_code'
      
      - name: iso_country_code
        data_type: varchar
        description: "{{ doc('tasty_bytes__iso_country_code') }}"
        tests:
          - test_name: not_null
            config:
              where: >
                dwh_source = 'tasty_bytes'
                and dwh_granularity in ('country_id', 'county_name', 'iso_country_code')
          - test_name: unique
            name: unique_dim_tasty_bytes__location_v1_iso_country_code__per__country_id
            config:
              where: >
                dwh_source = 'tasty_bytes' and dwh_granularity = 'country_id'
          - test_name: unique
            name: unique_dim_tasty_bytes__location_v1_iso_country_code__per__country_name
            config:
              where: >
                dwh_source = 'tasty_bytes' and dwh_granularity = 'country_name'
          - test_name: unique
            name: unique_dim_tasty_bytes__location_v1_iso_country_code__per__iso_country_code
            config:
              where: >
                dwh_source = 'tasty_bytes' and dwh_granularity = 'iso_country_code'
      
      - name: iso_currency_code
        data_type: varchar
        description: "{{ doc('tasty_bytes__iso_currency_code') }}"
        tests:
          - test_name: not_null
            config:
              where: >
                dwh_source = 'tasty_bytes'
                and dwh_granularity in ('country_id', 'county_name', 'iso_country_code')
